Terminals unused in grammar

    ERROR


Grammar

    0 $accept: input $end

    1 input: ε
    2      | input expression '\n'
    3      | input error '\n'

    4 expression: logical_or_expression

    5 logical_or_expression: logical_and_expression
    6                      | logical_or_expression OR_OP logical_and_expression

    7 logical_and_expression: equality_expression
    8                       | logical_and_expression AND_OP equality_expression

    9 equality_expression: relational_expression
   10                    | equality_expression EQ_OP relational_expression
   11                    | equality_expression NE_OP relational_expression

   12 relational_expression: additive_expression
   13                      | relational_expression '>' additive_expression
   14                      | relational_expression '<' additive_expression
   15                      | relational_expression GE_OP additive_expression
   16                      | relational_expression LE_OP additive_expression

   17 additive_expression: multiplicative_expression
   18                    | additive_expression '+' multiplicative_expression
   19                    | additive_expression '-' multiplicative_expression

   20 multiplicative_expression: unary_expression
   21                          | multiplicative_expression '*' unary_expression
   22                          | multiplicative_expression '/' unary_expression
   23                          | multiplicative_expression '%' unary_expression

   24 unary_expression: postfix_expression
   25                 | '+' unary_expression
   26                 | '-' unary_expression
   27                 | '!' unary_expression

   28 postfix_expression: primary_expression

   29 primary_expression: IDENTIFIER
   30                   | CONSTANT
   31                   | STRING_LITERAL
   32                   | '(' expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 2 3
    '!' (33) 27
    '%' (37) 23
    '(' (40) 32
    ')' (41) 32
    '*' (42) 21
    '+' (43) 18 25
    '-' (45) 19 26
    '/' (47) 22
    '<' (60) 14
    '>' (62) 13
    error (256) 3
    IDENTIFIER (258) 29
    CONSTANT (259) 30
    STRING_LITERAL (260) 31
    AND_OP (261) 8
    OR_OP (262) 6
    EQ_OP (263) 10
    NE_OP (264) 11
    LE_OP (265) 16
    GE_OP (266) 15
    ERROR (267)
    UNARY (268)


Nonterminals, with rules where they appear

    $accept (25)
        on left: 0
    input (26)
        on left: 1 2 3
        on right: 0 2 3
    expression (27)
        on left: 4
        on right: 2 32
    logical_or_expression (28)
        on left: 5 6
        on right: 4 6
    logical_and_expression (29)
        on left: 7 8
        on right: 5 6 8
    equality_expression (30)
        on left: 9 10 11
        on right: 7 8 10 11
    relational_expression (31)
        on left: 12 13 14 15 16
        on right: 9 10 11 13 14 15 16
    additive_expression (32)
        on left: 17 18 19
        on right: 12 13 14 15 16 18 19
    multiplicative_expression (33)
        on left: 20 21 22 23
        on right: 17 18 19 21 22 23
    unary_expression (34)
        on left: 24 25 26 27
        on right: 20 21 22 23 25 26 27
    postfix_expression (35)
        on left: 28
        on right: 24
    primary_expression (36)
        on left: 29 30 31 32
        on right: 28


State 0

    0 $accept: • input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input • $end
    2 input: input • expression '\n'
    3      | input • error '\n'

    $end            shift, and go to state 2
    error           shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    expression                 go to state 11
    logical_or_expression      go to state 12
    logical_and_expression     go to state 13
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 2

    0 $accept: input $end •

    $default  accept


State 3

    3 input: input error • '\n'

    '\n'  shift, and go to state 21


State 4

   29 primary_expression: IDENTIFIER •

    $default  reduce using rule 29 (primary_expression)


State 5

   30 primary_expression: CONSTANT •

    $default  reduce using rule 30 (primary_expression)


State 6

   31 primary_expression: STRING_LITERAL •

    $default  reduce using rule 31 (primary_expression)


State 7

   25 unary_expression: '+' • unary_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    unary_expression    go to state 22
    postfix_expression  go to state 19
    primary_expression  go to state 20


State 8

   26 unary_expression: '-' • unary_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    unary_expression    go to state 23
    postfix_expression  go to state 19
    primary_expression  go to state 20


State 9

   27 unary_expression: '!' • unary_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    unary_expression    go to state 24
    postfix_expression  go to state 19
    primary_expression  go to state 20


State 10

   32 primary_expression: '(' • expression ')'

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    expression                 go to state 25
    logical_or_expression      go to state 12
    logical_and_expression     go to state 13
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 11

    2 input: input expression • '\n'

    '\n'  shift, and go to state 26


State 12

    4 expression: logical_or_expression •
    6 logical_or_expression: logical_or_expression • OR_OP logical_and_expression

    OR_OP  shift, and go to state 27

    $default  reduce using rule 4 (expression)


State 13

    5 logical_or_expression: logical_and_expression •
    8 logical_and_expression: logical_and_expression • AND_OP equality_expression

    AND_OP  shift, and go to state 28

    $default  reduce using rule 5 (logical_or_expression)


State 14

    7 logical_and_expression: equality_expression •
   10 equality_expression: equality_expression • EQ_OP relational_expression
   11                    | equality_expression • NE_OP relational_expression

    EQ_OP  shift, and go to state 29
    NE_OP  shift, and go to state 30

    $default  reduce using rule 7 (logical_and_expression)


State 15

    9 equality_expression: relational_expression •
   13 relational_expression: relational_expression • '>' additive_expression
   14                      | relational_expression • '<' additive_expression
   15                      | relational_expression • GE_OP additive_expression
   16                      | relational_expression • LE_OP additive_expression

    LE_OP  shift, and go to state 31
    GE_OP  shift, and go to state 32
    '<'    shift, and go to state 33
    '>'    shift, and go to state 34

    $default  reduce using rule 9 (equality_expression)


State 16

   12 relational_expression: additive_expression •
   18 additive_expression: additive_expression • '+' multiplicative_expression
   19                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 12 (relational_expression)


State 17

   17 additive_expression: multiplicative_expression •
   21 multiplicative_expression: multiplicative_expression • '*' unary_expression
   22                          | multiplicative_expression • '/' unary_expression
   23                          | multiplicative_expression • '%' unary_expression

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    '%'  shift, and go to state 39

    $default  reduce using rule 17 (additive_expression)


State 18

   20 multiplicative_expression: unary_expression •

    $default  reduce using rule 20 (multiplicative_expression)


State 19

   24 unary_expression: postfix_expression •

    $default  reduce using rule 24 (unary_expression)


State 20

   28 postfix_expression: primary_expression •

    $default  reduce using rule 28 (postfix_expression)


State 21

    3 input: input error '\n' •

    $default  reduce using rule 3 (input)


State 22

   25 unary_expression: '+' unary_expression •

    $default  reduce using rule 25 (unary_expression)


State 23

   26 unary_expression: '-' unary_expression •

    $default  reduce using rule 26 (unary_expression)


State 24

   27 unary_expression: '!' unary_expression •

    $default  reduce using rule 27 (unary_expression)


State 25

   32 primary_expression: '(' expression • ')'

    ')'  shift, and go to state 40


State 26

    2 input: input expression '\n' •

    $default  reduce using rule 2 (input)


State 27

    6 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    logical_and_expression     go to state 41
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 28

    8 logical_and_expression: logical_and_expression AND_OP • equality_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    equality_expression        go to state 42
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 29

   10 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    relational_expression      go to state 43
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 30

   11 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    relational_expression      go to state 44
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 31

   16 relational_expression: relational_expression LE_OP • additive_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    additive_expression        go to state 45
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 32

   15 relational_expression: relational_expression GE_OP • additive_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    additive_expression        go to state 46
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 33

   14 relational_expression: relational_expression '<' • additive_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    additive_expression        go to state 47
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 34

   13 relational_expression: relational_expression '>' • additive_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    additive_expression        go to state 48
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 35

   18 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    multiplicative_expression  go to state 49
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 36

   19 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    multiplicative_expression  go to state 50
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20


State 37

   21 multiplicative_expression: multiplicative_expression '*' • unary_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    unary_expression    go to state 51
    postfix_expression  go to state 19
    primary_expression  go to state 20


State 38

   22 multiplicative_expression: multiplicative_expression '/' • unary_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    unary_expression    go to state 52
    postfix_expression  go to state 19
    primary_expression  go to state 20


State 39

   23 multiplicative_expression: multiplicative_expression '%' • unary_expression

    IDENTIFIER      shift, and go to state 4
    CONSTANT        shift, and go to state 5
    STRING_LITERAL  shift, and go to state 6
    '+'             shift, and go to state 7
    '-'             shift, and go to state 8
    '!'             shift, and go to state 9
    '('             shift, and go to state 10

    unary_expression    go to state 53
    postfix_expression  go to state 19
    primary_expression  go to state 20


State 40

   32 primary_expression: '(' expression ')' •

    $default  reduce using rule 32 (primary_expression)


State 41

    6 logical_or_expression: logical_or_expression OR_OP logical_and_expression •
    8 logical_and_expression: logical_and_expression • AND_OP equality_expression

    AND_OP  shift, and go to state 28

    $default  reduce using rule 6 (logical_or_expression)


State 42

    8 logical_and_expression: logical_and_expression AND_OP equality_expression •
   10 equality_expression: equality_expression • EQ_OP relational_expression
   11                    | equality_expression • NE_OP relational_expression

    EQ_OP  shift, and go to state 29
    NE_OP  shift, and go to state 30

    $default  reduce using rule 8 (logical_and_expression)


State 43

   10 equality_expression: equality_expression EQ_OP relational_expression •
   13 relational_expression: relational_expression • '>' additive_expression
   14                      | relational_expression • '<' additive_expression
   15                      | relational_expression • GE_OP additive_expression
   16                      | relational_expression • LE_OP additive_expression

    LE_OP  shift, and go to state 31
    GE_OP  shift, and go to state 32
    '<'    shift, and go to state 33
    '>'    shift, and go to state 34

    $default  reduce using rule 10 (equality_expression)


State 44

   11 equality_expression: equality_expression NE_OP relational_expression •
   13 relational_expression: relational_expression • '>' additive_expression
   14                      | relational_expression • '<' additive_expression
   15                      | relational_expression • GE_OP additive_expression
   16                      | relational_expression • LE_OP additive_expression

    LE_OP  shift, and go to state 31
    GE_OP  shift, and go to state 32
    '<'    shift, and go to state 33
    '>'    shift, and go to state 34

    $default  reduce using rule 11 (equality_expression)


State 45

   16 relational_expression: relational_expression LE_OP additive_expression •
   18 additive_expression: additive_expression • '+' multiplicative_expression
   19                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 16 (relational_expression)


State 46

   15 relational_expression: relational_expression GE_OP additive_expression •
   18 additive_expression: additive_expression • '+' multiplicative_expression
   19                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 15 (relational_expression)


State 47

   14 relational_expression: relational_expression '<' additive_expression •
   18 additive_expression: additive_expression • '+' multiplicative_expression
   19                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 14 (relational_expression)


State 48

   13 relational_expression: relational_expression '>' additive_expression •
   18 additive_expression: additive_expression • '+' multiplicative_expression
   19                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 13 (relational_expression)


State 49

   18 additive_expression: additive_expression '+' multiplicative_expression •
   21 multiplicative_expression: multiplicative_expression • '*' unary_expression
   22                          | multiplicative_expression • '/' unary_expression
   23                          | multiplicative_expression • '%' unary_expression

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    '%'  shift, and go to state 39

    $default  reduce using rule 18 (additive_expression)


State 50

   19 additive_expression: additive_expression '-' multiplicative_expression •
   21 multiplicative_expression: multiplicative_expression • '*' unary_expression
   22                          | multiplicative_expression • '/' unary_expression
   23                          | multiplicative_expression • '%' unary_expression

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    '%'  shift, and go to state 39

    $default  reduce using rule 19 (additive_expression)


State 51

   21 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $default  reduce using rule 21 (multiplicative_expression)


State 52

   22 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $default  reduce using rule 22 (multiplicative_expression)


State 53

   23 multiplicative_expression: multiplicative_expression '%' unary_expression •

    $default  reduce using rule 23 (multiplicative_expression)
